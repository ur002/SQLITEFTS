//This code was generated by a tool.
//Changes to this file will be lost if the code is regenerated.
// See the blog post here for help on using the generated code: http://erikej.blogspot.dk/2014/10/database-first-with-sqlite-in-universal.html
using System.Data.SQLite;
using System;

namespace SQLITEFTS
{
    public class SQLiteDb
    {
        string _path;
        public SQLiteDb(string path)
        {
            _path = path;
        }
        
         public void Create()
        {
            using (SQLiteConnection db = new SQLiteConnection(_path))
            {
                db.CreateTable<FTS>();
                db.CreateTable<FTS_config>();
                db.CreateTable<FTS_content>();
                db.CreateTable<FTS_data>();
                db.CreateTable<FTS_docsize>();
                db.CreateTable<FTS_Files>();
                db.CreateTable<FTS_idx>();
            }
        }
    }
    public partial class FTS
    {
    }
    
    public partial class FTS_config
    {
        [PrimaryKey]
        public Object k { get; set; }
        
        public Object v { get; set; }
        
    }
    
    public partial class FTS_content
    {
        [PrimaryKey, AutoIncrement]
        public Int64 id { get; set; }
        
        public Object c0 { get; set; }
        
        public Object c1 { get; set; }
        
    }
    
    public partial class FTS_data
    {
        [PrimaryKey, AutoIncrement]
        public Int64 id { get; set; }
        
        public Byte[] block { get; set; }
        
    }
    
    public partial class FTS_docsize
    {
        [PrimaryKey, AutoIncrement]
        public Int64 id { get; set; }
        
        public Byte[] sz { get; set; }
        
    }
    
    public partial class FTS_Files
    {
        [PrimaryKey, AutoIncrement]
        public Int64 FileID { get; set; }
        
        [Unique(Name = "sqlite_autoindex_FTS_Files_1", Order = 0)]
        public String FileName { get; set; }
        
    }
    
    public partial class FTS_idx
    {
        [NotNull]
        public Object segid { get; set; }
        
        [NotNull]
        public Object term { get; set; }
        
        public Object pgno { get; set; }
        
    }
    
}
